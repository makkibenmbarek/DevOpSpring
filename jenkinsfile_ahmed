pipeline{

      agent any
        tools {
     jdk '$JAVA_HOME'
     maven 'M2_HOME'
  }
     
        
        stages{
/*

                            stage('Testing process') {
                              steps {
                               script {
                                sh 'echo "Test is processing ...."'
                                sh 'mvn clean test'
                               }

                              }

                            }

               stage('Quality Gate Status Check'){
                  steps{
                      script{
			      withSonarQubeEnv('sonar') {
			      sh "mvn compile sonar:sonar"
                       	     	}
			      timeout(time: 1, unit: 'HOURS') {
			      def qg = waitForQualityGate()
				      if (qg.status != 'OK') {
					   error "Pipeline aborted due to quality gate failure: ${qg.status}"
				      }
                    		}
		    	    sh "mvn clean install"

                 	}
               	 }
              }*/
		stage("Maven Build") {
            steps {
                script {
                    sh "mvn package -DskipTests=true"
                }
            }
        }
	 stage('Build docker image'){
            steps{
                script{
                    sh 'docker build -t asej1/springprojet .'
                }
            }
        }
	        stage('Push image to Hub'){
            steps{
                script{
		withCredentials([string(credentialsId: 'dockerhub-pwd', variable: 'dockerhubpwd')]) {
                   sh 'docker login -u asej1 -p $dockerhubpwd docker.io'
}

                   sh 'docker push asej1/springprojet:latest'
                }
            }
        }
        }
}
